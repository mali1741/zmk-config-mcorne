/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    macros {

    ZMK_MACRO(se_tilde,
        wait-ms = <30>;
        tap-ms = <40>;
        bindings = <&kp RA(RBKT) &kp SPACE>;
    )

    ZMK_MACRO(se_tick,
        wait-ms = <30>;
        tap-ms = <40>;
        bindings = <&kp LS(EQUAL) &kp SPACE>;
    )

    ZMK_MACRO(se_circ,
        wait-ms = <30>;
        tap-ms = <40>;
        bindings = <&kp LS(RBKT) &kp SPACE>;
    )
 
    };
    behaviors {
        tu: hold_tap_repeat {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_STANDARD";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            global-quick-tap;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };

        ht: hold_tap_standard {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_STANDARD";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            flavor = "hold-preferred";
            bindings = <&kp>, <&kp>;
        };

        ly: custom_layer_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "CUSTOM_LAYER_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            bindings = <&mo>, <&kp>;
        };

        td1: tap_dance1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_1";
            #binding-cells = <0>;
            tapping-term-ms = <175>;
            bindings = <&sl 1>, <&tog 1>;
        };

        tdte: tap_dance2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_2";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp TAB>, <&kp ESC>;
        };

        tdfn: tap_dance3 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_3";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp F10>, <&kp F11>, <&kp F12>;
        };

        
    };
    keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L   |  U  |  Y  |  Ö  |  Å   |
// | ALTE |  A  |  R  |  S  |  T  |  G  |   |  M  |  N   |  E  |  I  |  O  |  Ä   |
// | SH/: |  Z  |  X  |  C  |  V  |  B  |   |  K  |  H   |  ,  |  .  |  -  | SH/' |
//                    | CTL | LWR | SPC |   | ENT | RSE  | GUI/DEL |
                        bindings = <
   &kp TAB      &kp Q &kp W &kp F &kp P &kp B        &kp J &kp L  &kp U     &kp Y   &kp SEMI &kp LBKT
   &tu LALT ESC &kp A &kp R &kp S &kp T &kp G        &kp M &kp N  &kp E     &kp I   &kp O    &kp SQT
   &ht LSFT GT  &kp Z &kp X &kp C &kp D &kp V        &kp K &kp H  &kp COMMA &kp DOT &kp FSLH &tu RSFT NUHS
           &kp LCTRL &ly 1 TAB &tu LSFT SPACE        &ly 3 RET &ly 2 BSPC &tu LGUI DEL
                        >;
                };

                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | CTL |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp GRAVE      &kp F1       &kp F2       &kp F3       &kp F4       &kp F5         &kp F6   &kp F7   &kp F8    &kp F9       &tdfn     &se_tick
   &tu LALT N0    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8    &kp N9       &kp N0    &kp MINUS
   &ht LSFT LT    &trans       &trans       &trans       &trans       &trans         &kp INS  &kp DEL  &kp NUBS  &kp LS(NUBS) &kp UNDER &kp AT
                                            &kp LCTRL    &trans       &trans         &trans   &trans   &kp RCTRL
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// | STAB | MUT |  @  |     | PSC | SF5  |   |  ^  |  ´  |  {  |  }  |  \  |  ~   |
// | ALTE |  !  |  "  |  #  |  $  |  %   |   |  &  |  /  |  (  |  )  |  |  |  =   |
// | CW   |  Z  |  X  |  C  |  D  |  V   |   |  |  |  `  |  [  |  ]  |  /  |  *   |
//                    | CTL | LWR | SSPC |   | ENT | RSE | ALT |
                        bindings = <
   &kp LS(TAB)  &kp C_MUTE &kp RA(N2) &kp RC(F) &kp PSCRN  &kp LS(F5)     &se_circ      &kp EQUAL  &kp RA(N7)  &kp RA(N0)  &kp RA(MINUS) &se_tilde
   &tu LALT ESC &kp EXCL   &kp AT     &kp HASH  &kp RA(N4) &kp PRCNT      &kp CARET     &kp AMPS   &kp LS(N8)  &kp LS(N9)  &kp RA(NUBS)  &kp LS(N0)
   &caps_word   &trans     &trans     &trans    &trans     &trans         &kp RA(NUBS)  &kp PLUS   &kp RA(N8)  &kp RA(N9)  &kp LS(N7)    &kp LS(NUHS)
                                      &kp LCTRL &trans     &trans         &trans        &trans     &key_repeat
                        >;
                };

                arrow_layer {
// -----------------------------------------------------------------------------------------
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   |     | LFT | DWN |  UP | RGT |      |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   |     | LFT | DWN |  UP | RGT |      |
// | SHFT |     |     |     |     |     |   |     | HOM | PGD | PGU | END | RSFT |
//                    | GUI |     | SPC |   | ENT |     | RPT |
                        bindings = <
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3  &kp LC(F5)     &none    &none    &none    &none     &none     &none
   &kp LALT   &none        &none        &to 4        &kp LC(LS(T)) &to 8          &none    &kp LEFT &kp DOWN &kp UP    &kp RIGHT &none
   &kp LSFT   &trans       &trans       &trans       &trans        &trans         &none    &kp HOME &kp PGDN &kp PGUP  &kp END   &kp RSFT 
                                        &kp LCTRL    &kp TAB       &trans         &trans   &kp BSPC  &key_repeat
                        >;
                };

                sweep_layer {
// -----------------------------------------------------------------------------------------
// |    |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L   |  U  |  Y  |  Ö/Ä  |     |
// |    |  A  |  R  |  S  |  T  |  G  |   |  M  |  N   |  E  |  I  |  O/Å  |     |
// |    | C/Z |  X  |  C  |  V  |  B  |   |  K  |  H   |  ,  |  .  |  G/-  |     |
//                    |   | LWR | SPC |   | ENT | RSE  |     |
                        bindings = <
   &none &kp Q       &kp W &kp F &kp P &kp B         &kp J &kp L  &kp U     &kp Y   &tu LBKT SEMI &none
   &none &tu LALT A  &kp R &kp S &kp T &kp G         &kp M &kp N  &kp E     &kp I   &tu SQT  O    &none
   &none &tu LCTRL Z &kp X &kp C &kp D &kp V         &kp K &kp H  &kp COMMA &kp DOT &tu LGUI FSLH &none
             &none   &ly 5 ESC   &tu LSFT SPACE   &ly 7 RET &ly 6 BSPC &none
                        >;
                };

                sweep_lower_layer {
// -----------------------------------------------------------------------------------------
// |    | F1  | F2 | F3 | F4 | F5 |   | F6 | F7 | F8 |  F9 | F10+ |     |      |
// |    | A/1 |  2 |  3 |  4 |  5 |   |  6 |  7 |  8 |  9  |  0   |     |
// |    |     |     |     |     |     |   |     |     |     |     |     |      |
//                    |   | LWR | SPC |   | ENT | RSE |     |
                        bindings = <
   &none &kp F1          &kp F2    &kp F3    &kp F4    &kp F5         &kp F6   &kp F7    &kp F8    &kp F9       &tdfn        &none
   &none &tu LALT N1     &kp N2    &kp N3    &kp N4    &kp N5         &kp N6   &kp N7    &kp N8    &kp N9       &kp N0       &none
   &none &ht LCTRL LC(Z) &kp LC(X) &kp LC(C) &kp LC(D) &kp LC(V)      &none    &kp DEL   &kp NUBS  &kp LS(NUBS) &kp UNDER    &none
                                   &none     &trans    &trans         &trans   &trans   &none
                        >;
                };

                sweep_raise_layer {
// -----------------------------------------------------------------------------------------
// |    | TAB |  @  | C-F | PSC | SF5  |   |  ^  |  +  |  {  |  }  |  \  |     |
// |    | A/! |  "  |  #  |  $  |  %   |   |  &  |  =  |  (  |  )  |  |  |     |
// |    | CW  |  '  |  C  |  D  |  V   |   |  ~  |  *  |  [  |  ]  |  /  |     |
//                  |     | LWR | SSPC |   | ENT | RSE |     |
                        bindings = <
   &none  &kp TAB       &kp RA(N2) &kp RC(F) &kp PSCRN  &kp LS(F5)      &se_circ     &kp MINUS    &kp RA(N7)  &kp RA(N0)  &kp RA(MINUS) &none
   &none  &tu LALT EXCL &kp AT     &kp HASH  &kp RA(N4) &kp PRCNT       &kp CARET    &kp LS(N0)   &kp LS(N8)  &kp LS(N9)  &kp RA(NUBS)  &none
   &none  &caps_word    &kp NUHS   &trans    &trans     &trans          &se_tilde    &kp LS(NUHS) &kp RA(N8)  &kp RA(N9)  &kp LS(N7)    &none
                                   &none     &trans     &trans          &trans       &trans   &none
                        >;
                };

                sweep_arrow_layer {
// -----------------------------------------------------------------------------------------
// |      | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   |     | LFT | DWN |  UP | RGT |      |
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | SHFT |     |     |     |     |     |   |     | HOM | PGD | PGU | END | RSFT |
//                    | GUI |     | SPC |   | ENT |     | RPT |
                        bindings = <
   &none &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2  &bt BT_SEL 3   &none    &none    &none    &none     &none     &none
   &none &kp LALT   &none        &to 0        &kp LC(LS(T)) &to 8          &kp DEL  &kp LEFT &kp DOWN &kp UP    &kp RIGHT &none
   &none &kp LCTRL  &trans       &trans       &trans        &trans         &none    &kp HOME &kp PGDN &kp PGUP  &kp END   &none
                                     &none    &kp ESC       &trans         &trans   &kp BSPC &none
                        >;
                };

                gaming_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &tdte     &kp Q &kp W &kp E &kp R   &ht T RET  &kp Y &kp U  &kp I     &kp O   &kp P    &kp LBKT
   &kp GRAVE &kp A &kp S &kp D &kp F   &ht B G    &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSFT  &kp Z &kp X &kp C &ht N H &kp V      &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSFT
                   &kp LCTRL &kp SPACE &kp SPACE  &to 0 &kp BSPC &kp DEL
                        >;
                };
    };
};

